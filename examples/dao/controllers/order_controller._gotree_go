package controllers

import (
	"examples/dao/sources/models/order"
	"examples/protocol/dao_cmd"
	"examples/protocol/dao_value"
	"fmt"

	"github.com/8treenet/gotree/dao"
	"github.com/8treenet/gotree/helper"
)

func init() {
	dao.RegisterController(new(OrderController).Gotree())
}

type OrderController struct {
	dao.ComController
}

// Gotree
func (self *OrderController) Gotree() *OrderController {
	self.ComController.Gotree(self)
	return self
}

//Prepare
func (self *OrderController) Prepare(method string, argv interface{}) {
	helper.Log().WriteInfo("Prepare:", method, argv)
}

//Finish
func (self *OrderController) Finish(method string, reply interface{}, e error) {
	helper.Log().WriteInfo("Finish:", method, fmt.Sprint(reply), e)
}

// Add 下单
func (self *OrderController) Add(cmd dao_cmd.OrderAdd, result *helper.VoidValue) (e error) {
	var (
		mOrder    *order.Order
		mOrderLog *order.OrderLog
	)
	*result = helper.VoidValue{}
	self.Model(&mOrder)
	self.Model(&mOrderLog)

	//事务
	self.Transaction(func() error {
		id, e := mOrder.Add(cmd.ProductId, cmd.UserId)
		if e != nil {
			return e
		}
		return mOrderLog.Add(id, "add")
	})

	return
}

// List 订单列表
func (self *OrderController) List(cmd dao_cmd.OrderList, result *dao_value.OrderList) (e error) {
	var (
		mOrder *order.Order
	)
	*result = dao_value.OrderList{}
	self.Model(&mOrder)
	list, e := mOrder.ListByUser(cmd.UserId)
	if e != nil {
		return
	}
	helper.Memcpy(&result.List, list)
	return
}
