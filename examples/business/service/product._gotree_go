package service

import (
	"examples/protocol/dao_cmd"
	"examples/protocol/dao_value"

	"github.com/8treenet/gotree/helper"

	"github.com/8treenet/gotree/business"
)

func init() {
	business.RegisterService(new(Product).Gotree())
}

type Product struct {
	business.BusinessService
}

//Gotree
func (self *Product) Gotree() *Product {
	self.BusinessService.Gotree(self)
	return self
}

//Shopping 购买商品
func (self *Product) Shopping(userId, productId int64) (shortage bool, e error) {
	cmdPt := new(dao_cmd.ProductGet).Gotree(productId)
	pt := dao_value.ProductGet{}
	//查询商品价格
	e = self.CallDao(cmdPt, &pt)
	if e != nil {
		return
	}

	//获取用户
	cmdUser := new(dao_cmd.UserGet).Gotree(userId)
	user := dao_value.UserGet{}
	e = self.CallDao(cmdUser, &user)
	if e != nil {
		return
	}
	if user.Money < pt.Price {
		//金钱不足
		shortage = true
		return
	}

	//扣用户账户余额
	subPrice := new(dao_cmd.UserMoneyAdd).Gotree(userId, -pt.Price)
	if e = self.CallDao(subPrice, &helper.VoidValue{}); e != nil {
		return
	}

	//下单
	cmdOrder := new(dao_cmd.OrderAdd).Gotree(productId, userId)
	order := helper.VoidValue{}
	e = self.CallDao(cmdOrder, &order)
	if e != nil {
		return
	}
	return
}

// Store 商品列表
func (self *Product) Store() (result []struct {
	Id    int64
	Price int64
	Desc  string
}, e error) {
	cmdPt := new(dao_cmd.ProductGetList).Gotree([]int64{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15})
	store := dao_value.ProductGetList{}
	e = self.CallDao(cmdPt, &store)
	if e != nil {
		return
	}
	result = store.List
	return
}
