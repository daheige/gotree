package dao_cmd

import (
	rc "github.com/8treenet/gotree/remote_call"
)

func init() {
	//UserGet加入熔断 条件:15秒内 %50超时, 60秒后恢复
	rc.RegisterBreaker(new(UserGet), 15, 0.5, 60)
}

//orderCmdBase
type orderCmdBase struct {
	rc.RpcCmd
}

func (self *orderCmdBase) Gotree(child ...interface{}) *orderCmdBase {
	self.RpcCmd.Gotree(self)
	self.AddChild(self, child...)
	return self
}

// Control
func (self *orderCmdBase) Control() string {
	return "Order"
}

// DaoAddr 访问ip地址
func (self *orderCmdBase) DaoAddr(rn rc.RpcNode) string {
	//rn.RandomRpcAddr() 随机节点访问
	//rn.BalanceRpcAddr() 负载均衡节点访问
	//rn.DummyHashRpcAddr(123) 一致性哈希节点访问
	//rn.AllNode() 获取全部节点,自定义方式访问
	//rn.SlaveRpcAddr()  //返回随机从节点  主节点:节点id=1,当只有主节点返回主节点
	//rn.MasterRpcAddr() //返回主节点 主节点:节点id=1
	return rn.RandomRpcAddr()
}

// OrderAdd 下单
type OrderAdd struct {
	orderCmdBase //继承orderCmdBase
	ProductId    int64
	UserId       int64
}

func (self *OrderAdd) Gotree(productId, userId int64) *OrderAdd {
	self.orderCmdBase.Gotree(self)
	self.ProductId = productId
	self.UserId = userId
	return self
}

func (self *OrderAdd) Action() string {
	return "Add"
}

// OrderList 订单列表
type OrderList struct {
	orderCmdBase //继承orderCmdBase
	UserId       int64
}

func (self *OrderList) Gotree(userId int64) *OrderList {
	self.orderCmdBase.Gotree(self)
	self.UserId = userId
	return self
}

func (self *OrderList) Action() string {
	return "List"
}
