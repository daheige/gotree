package dao_cmd

import (
	rc "github.com/8treenet/gotree/remote_call"
)

// Course feature示例
type Course struct {
	rc.RpcCmd    //继承RpcCmd
	CourseString string
	CourseInt    int
	CourseList   []int64 `opt:"empty"` //如果值为 []、""、0,加入此 tag ,否则会报错!
	CourseByte   byte    `opt:"empty"`
}

func (self *Course) Gotree(courseString string, courseInt int) *Course {
	self.RpcCmd.Gotree(self)
	self.CourseString = courseString
	self.CourseInt = courseInt
	return self
}

func (self *Course) Action() string {
	return "Course"
}

// Control
func (self *Course) Control() string {
	return "Feature"
}

// 多态方法重写 ComAddr 用于多 Dao 时的分布规则。
func (self *Course) ComAddr(rn rc.ComNode) string {
	//分布于dao.conf配置相关
	//rn.RandomAddr() 随机节点访问
	//rn.BalanceAddr() 负载均衡节点访问
	//rn.DummyHashAddr(123) 一致性哈希节点访问
	//rn.AllNode() 获取全部节点, 和节点的dao_extra， 自定义方式访问
	//rn.SlaveAddr()  //返回随机从节点  主节点:节点id=1,当只有主节点返回主节点
	//rn.MasterAddr() //返回主节点 主节点:节点id=1
	return rn.RandomAddr()
}
